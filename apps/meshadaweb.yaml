---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meshada-apps
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meshada-apps
  template:
    metadata:
      labels:
        app: meshada-apps
    spec:
      containers:
        - image: registry.digitalocean.com/meshada-registry/meshadaweb:dd6449e
          name: meshadaweb
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
        - image: registry.digitalocean.com/meshada-registry/meshadaapi:2a53d5b
          name: meshadaapi
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
        - image: registry.digitalocean.com/meshada-registry/meshadaml:5a52d77
          name: meshadaml
          imagePullPolicy: Always
          ports:
            - containerPort: 8090
        - image: darthsim/imgproxy:latest
          name: imgproxy
          ports:
            - containerPort: 8080
          env:
            - name: IMGPROXY_ENABLE_WEBP_DETECTION
              value: "true"
      imagePullSecrets:
        - name: meshada-registry
---
apiVersion: v1
kind: Service
metadata:
  name: meshada-web-service
  namespace: default
spec:
  ports:
    - port: 4000
      targetPort: 4000
  selector:
    app: meshada-apps
---
apiVersion: v1
kind: Service
metadata:
  name: meshada-api-service
  namespace: default
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: meshada-apps
---
apiVersion: v1
kind: Service
metadata:
  name: meshada-ml-service
  namespace: default
spec:
  ports:
    - port: 8090
      targetPort: 8090
  selector:
    app: meshada-apps
---
apiVersion: v1
kind: Service
metadata:
  name: imgproxy
  namespace: default
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: meshada-apps
---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: mw-admin
#   namespace: default
# spec:
#   stripPrefix:
#     forceSlash: false
#     prefixes:
#       - /search
#       - /elastic
# ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    # cert-manager.io/issue-temporary-certificate: "true"
    # acme.cert-manager.io/http01-edit-in-place: "true"
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # traefik.ingress.kubernetes.io/router.middlewares: default-mw-admin@kubernetescrd
  name: meshadaweb-ingress
  namespace: default
spec:
  # ingressClassName: nginx
  rules:
    - host: www.meshada.com
      http:
        paths:
          - backend:
              service:
                name: meshada-web-service
                port:
                  number: 4000
            path: /
            pathType: Prefix
          - backend:
              service:
                name: meshada-api-service
                port:
                  number: 9090
            path: /api(/|$)(.*)
            pathType: Prefix
          - backend:
              service:
                name: quickstart-es-http
                port:
                  number: 9200
            path: /elastic(/|$)(.*)
            pathType: Prefix
          - backend:
              service:
                name: imgproxy
                port:
                  number: 8080
            path: /sig(/|$)(.*)
            pathType: Prefix
          - backend:
              service:
                name: enterprise-search-quickstart-ent-http
                port:
                  number: 3002
            path: /search
            pathType: Prefix
  ingressClassName: nginx
  tls:
    - hosts:
        - www.meshada.com
      secretName: meshadaweb-secret-ingress-prod
