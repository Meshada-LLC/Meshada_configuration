# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: docker-registry-pvc
#   namespace: docker-registry
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: docker-registry
# spec:
#   ports:
#     - port: 5000
#   selector:
#     app: docker-registry
#   clusterIP: None
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: docker-registry-ingress
#   namespace: docker-registry
# spec:
#   rules:
#     - host: dea66ec9-3b25-4048-bb4b-e3340ffd6b3a.k8s.civo.com
#       http:
#         paths:
#           - path: /register
#             pathType: Exact
#             backend:
#               service:
#                 name: docker-registry
#                 port:
#                   number: 5000

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus-server
  template:
    metadata:
      labels:
        app: nexus-server
    spec:
      containers:
        - name: nexus
          image: sonatype/nexus3:latest
          resources:
            limits:
              memory: "4Gi"
              cpu: "1000m"
            requests:
              memory: "2Gi"
              cpu: "500m"
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: nexus-data
              mountPath: /nexus-data
      volumes:
        - name: nexus-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-service
  namespace: devops-tools
  # annotations:
  #     prometheus.io/scrape: "true"
  #     prometheus.io/path: /
  #     prometheus.io/port: "8081"
spec:
  selector:
    app: nexus-server
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
      nodePort: 32000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus-ingress
  namespace: devops-tools
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: docker-staging.meshada.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nexus-service
                port:
                  number: 8081
  tls:
    - hosts:
        - docker-staging.meshada.com
      secretName: docker-staging-secret
