apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logstash-lib-pv-claim
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: quickstart
spec:
  count: 1
  elasticsearchRefs:
    - name: quickstart
      clusterName: qs
  version: 8.8.2
  podTemplate:
    spec:
      containers:
        - name: logstash
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 1
          # command: ["/bin/sh"]
          # args: ["-c", "curl -L -o  /usr/share/logstash/personal/mysql-connector-java-8.0.30.jar https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.30/mysql-connector-java-8.0.30.jar"]
          volumeMounts:
            - mountPath: /usr/share/logstash/personal
              name: logstash-lib-pv-claim
              readOnly: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: logstash-lib-pv-claim
          persistentVolumeClaim:
            claimName: logstash-lib-pv-claim
  pipelines:
    - pipeline.id: main
      config.string: |
        input { 
          jdbc {
            jdbc_driver_library => "/usr/share/logstash/personal/mysql-connector-java-8.0.30.jar"
            jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://my-db-pxc-db-haproxy.default.svc.cluster.local/MeshadaDB?sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false"
            jdbc_user => "root"
            jdbc_password =>"SnT+4=guOdh)MYFqWIj"
            # parameters => { "favorite_artist" => "Beethoven" }
            schedule => "* * * * *"
            statement => "SELECT * FROM MeshadaDB.products WHERE price <> :sql_last_value"
            use_column_value => true
            tracking_column => "price"
            tracking_column_type => "numeric"
          }
        }
        output {
          elastic_app_search {
            engine => "meshada-search-engine"
            api_key => "private-sds25541mkgfyhufra3dj9w4"
            url => "http://enterprise-search-quickstart-ent-http:3002"
          }
          # stdout { codec => json }
        }

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: quickstart
spec:
  version: 8.8.2
  # http:
  #   service:
  #     spec:
  #       type: LoadBalancer
  count: 1
  elasticsearchRef:
    name: quickstart
  enterpriseSearchRef:
    name: enterprise-search-quickstart
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  podTemplate:
    spec:
      containers:
        - name: kibana
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=2048"
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 1
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: quickstart
spec:
  version: 8.8.2
  nodeSets:
    - name: master
      count: 1
      config:
        node.roles: ["master"]
        node.store.allow_mmap: false
      # podTemplate:
      #   spec:
      #     containers:
      #       - name: elasticsearch
      #         env:
      #           - name: ES_JAVA_OPTS
      #             value: -Xms2g -Xmx2g
      # initContainers:
      #   - name: sysctl
      #     securityContext:
      #       privileged: true
      #       runAsUser: 0
      #     command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
    - name: data
      count: 1
      config:
        # On Elasticsearch versions before 7.9.0, replace the node.roles configuration with the following:
        # node.master: false
        # node.data: true
        # node.ingest: true
        # node.ml: true
        # node.transform: true
        node.roles: ["data"]
        # node.remote_cluster_client: false
      # podTemplate:
      #   spec:
      #     containers:
      #       - name: elasticsearch
      #         env:
      #           - name: ES_JAVA_OPTS
      #             value: -Xms2g -Xmx2g
      #         resources:
      #           requests:
      #             memory: 1Gi
      #             cpu: 1
      #           limits:
      #             memory: 2Gi
      #             cpu: 1
      # initContainers:
      #   - name: sysctl
      #     securityContext:
      #       privileged: true
      #       runAsUser: 0
      #     command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
  # http:
  #   tls:
  #     selfSignedCertificate:
  #       disabled: true
---
apiVersion: enterprisesearch.k8s.elastic.co/v1
kind: EnterpriseSearch
metadata:
  name: enterprise-search-quickstart
spec:
  version: 8.8.2
  count: 1
  elasticsearchRef:
    name: quickstart
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  config:
    # define the exposed URL at which users will reach Enterprise Search
    ent_search.external_url: https://enterprise-search.meshada.com
    # define the exposed URL at which users will reach Kibana
    kibana.host: https://kibana-staging.meshada.com
    # configure app search document size limit
    app_search.engine.document_size.limit: 100kb
  podTemplate:
    spec:
      containers:
        - name: enterprise-search
          # resources:
          #   requests:
          #     memory: 1Gi
          #     cpu: 1
          #   limits:
          #     memory: 2Gi
          #     cpu: 1
          env:
            - name: JAVA_OPTS
              value: -Xms3500m -Xmx3500m
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
  # namespace: default
  annotations:
    # cert-manager.io/issue-temporary-certificate: "true"
    # acme.cert-manager.io/http01-edit-in-place: "true"
    # kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  rules:
    - host: kibana-staging.meshada.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: quickstart-kb-http
                port:
                  number: 5601
    - host: enterprise-search.meshada.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: enterprise-search-quickstart-ent-http
                port:
                  number: 3002
  tls:
    - hosts:
        - kibana-staging.meshada.com
        - enterprise-search.meshada.com
      secretName: eck-secret-ingress-prod
