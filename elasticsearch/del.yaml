apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2023-07-04T08:18:40Z"
  generation: 1
  labels:
    common.k8s.elastic.co/template-hash: "556076473"
    common.k8s.elastic.co/type: kibana
    kibana.k8s.elastic.co/name: quickstart
  name: quickstart-kb
  namespace: devops-tools
  ownerReferences:
    - apiVersion: kibana.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Kibana
      name: quickstart
      uid: fb4ddd28-9d2a-4700-a5ea-a799ae4feb9e
  resourceVersion: "11385879"
  uid: 96d1500f-b68a-4e80-8c4a-82d51f236862
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/name: quickstart
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        co.elastic.logs/module: kibana
        kibana.k8s.elastic.co/config-hash: "3995200429"
      creationTimestamp: null
      labels:
        common.k8s.elastic.co/type: kibana
        kibana.k8s.elastic.co/name: quickstart
        kibana.k8s.elastic.co/version: 8.8.2
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: NODE_OPTIONS
              value: --max-old-space-size=2048
          image: docker.elastic.co/kibana/kibana:8.8.2
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
            - containerPort: 5601
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 2560Mi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/elastic-internal/kibana-config
              name: elastic-internal-kibana-config
              readOnly: true
            - mountPath: /usr/share/kibana/config
              name: elastic-internal-kibana-config-local
            - mountPath: /usr/share/kibana/config/elasticsearch-certs
              name: elasticsearch-certs
              readOnly: true
            - mountPath: /usr/share/kibana/config/ent-certs
              name: ent-certs
              readOnly: true
            - mountPath: /usr/share/kibana/data
              name: kibana-data
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - /usr/bin/env
            - bash
            - -c
            - "#!/usr/bin/env bash\nset -eux\n\ninit_config_initialized_flag=/mnt/elastic-internal/kibana-config-local/elastic-internal-init-config.ok\n\nif
              [[ -f \"${init_config_initialized_flag}\" ]]; then\n    echo \"Kibana configuration
              already initialized.\"\n\texit 0\nfi\n\necho \"Setup Kibana configuration\"\n\nln
              -sf /mnt/elastic-internal/kibana-config/* /mnt/elastic-internal/kibana-config-local/\n\ntouch
              \"${init_config_initialized_flag}\"\necho \"Kibana configuration successfully
              prepared.\"\n"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: docker.elastic.co/kibana/kibana:8.8.2
          imagePullPolicy: IfNotPresent
          name: elastic-internal-init-config
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/elastic-internal/kibana-config
              name: elastic-internal-kibana-config
              readOnly: true
            - mountPath: /mnt/elastic-internal/kibana-config-local
              name: elastic-internal-kibana-config-local
            - mountPath: /usr/share/kibana/config/elasticsearch-certs
              name: elasticsearch-certs
              readOnly: true
            - mountPath: /usr/share/kibana/config/ent-certs
              name: ent-certs
              readOnly: true
            - mountPath: /usr/share/kibana/data
              name: kibana-data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: elastic-internal-kibana-config
          secret:
            defaultMode: 420
            optional: false
            secretName: quickstart-kb-config
        - emptyDir: {}
          name: elastic-internal-kibana-config-local
        - name: elasticsearch-certs
          secret:
            defaultMode: 420
            optional: false
            secretName: quickstart-kb-es-ca
        - name: ent-certs
          secret:
            defaultMode: 420
            optional: false
            secretName: quickstart-kb-ent-ca
        - emptyDir: {}
          name: kibana-data
status:
  availableReplicas: 1
  collisionCount: 1
  conditions:
    - lastTransitionTime: "2023-07-04T08:18:40Z"
      lastUpdateTime: "2023-07-04T08:19:40Z"
      message: ReplicaSet "quickstart-kb-5b84d9888f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2023-07-04T08:46:35Z"
      lastUpdateTime: "2023-07-04T08:46:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
